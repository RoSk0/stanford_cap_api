<?php

/**
 * @file
 * Install, update, and uninstall functions for the module.
 */

/**
 * Implements hook_schema().
 */
function stanford_cap_api_schema() {
  $schema['cap_api_fields'] = array(
    'description' => 'Stores field name which was created while synchronizing CAP profiles with CAP server.',
    'fields' => array(
      'field_name' => array(
        'description' => 'Field name.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
  );

  $schema['cap_api_orgs'] = array(
    'description' => 'Stores information about organizations exposed by CAP API.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'orgid' => array(
        'description' => 'Organization ID.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'alias' => array(
        'description' => 'Alias.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'browsable' => array(
        'description' => 'Browsable?',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'children' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'description' => 'A serialized array of the org ID of children(departments).',
      ),
      'name' => array(
        'description' => 'Human name of organization.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'orgCodes' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'description' => 'A serialized array of the organization codes.',
      ),
      'type' => array(
        'description' => 'Organization type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'url' => array(
        'description' => 'Organization URL.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['cap_api_profiles'] = array(
    'description' => 'Stores information about CAP profiles.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'profile_id' => array(
        'description' => 'Profile ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'etag' => array(
        'description' => 'Etag.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id', 'profile_id', 'nid'),
  );

  $schema['cap_api_sync_groups'] = array(
    'description' => 'Stores information about CAP profiles groups that should be synced.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Group name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Group type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'count' => array(
        'description' => 'How many profiles in this group.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'lastsynced' => array(
        'description' => 'Last synced timestamp.',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('id', 'name'),
  );

  return $schema;
}
