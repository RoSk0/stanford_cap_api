<?php
/**
 * @file
 * Code for the Stanford Profile Bonus feature.
 */

include_once 'stanford_profile_bonus.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds new exposed filter to stanford_profiles view and submit handler.
 */
function stanford_profile_bonus_form_views_exposed_form_alter(&$form, &$form_state) {
  if ($form['#id'] == 'views-exposed-form-stanford-profiles-page') {
    $form['affiliation_type'] = array(
      '#title' => t('Type'),
      '#type' => 'select',
      '#options' => array(
        'any' => t('- Any -'),
        'staff' => t('Staff'),
        'physician' => t('Physician'),
        'postdoc' => t('Postdoc'),
        'faculty' => t('Faculty'),
        'student' => t('Student'),
      ),
      '#weight' => -100,
    );
    array_unshift($form['#submit'], 'stanford_profile_bonus_form_views_exposed_form_submit');
  }
  elseif ($form['#id'] == 'views-exposed-form-stanford-publications-page') {
    $form['title']['#autocomplete_path'] = 'stanford-publications-name-autocomplete';
  }
}

/**
 * Submit handler for profile type filter.
 */
function stanford_profile_bonus_form_views_exposed_form_submit($form, &$form_state) {
  if (isset($form_state['values']) && isset($form_state['values']['affiliation_type'])) {
    switch ($form_state['values']['affiliation_type']) {
      case 'staff':
        $form_state['values']['cap_capstaff_value'] = 1;
        break;

      case 'physician':
        $form_state['values']['cap_physician_value'] = 1;
        break;

      case 'postdoc':
        $form_state['values']['cap_cappostdoc_value'] = 1;
        break;

      case 'faculty':
        $form_state['values']['cap_capfaculty_value'] = 1;
        break;

      case 'student':
        $form_state['values']['cap_capmdstudent_value'] = 1;
        $form_state['values']['cap_capmsstudent_value'] = 1;
        $form_state['values']['cap_capphdstudent_value'] = 1;
        break;
    }
  }
}

/**
 * Implements hook_menu().
 */
function stanford_profile_bonus_menu() {
  $items = array(
    'stanford-publications-name-autocomplete' => array(
      'title' => 'Autocomplete callback',
      'description' => 'Autocomplete callback for Stanford publications view "Name" filter',
      'page callback' => 'stanford_profile_bonus_name_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    ),
  );

  return $items;
}

/**
 * Name autocomplete callback.
 */
function stanford_profile_bonus_name_autocomplete($string = '') {
  $matches = array();
  if ($string) {
    $result = db_select('node', 'n')
      ->fields('n', array('title'))
      ->condition('type', 'cap_stanford_profile')
      ->condition('title', db_like($string) . '%', 'LIKE')
      ->range(0, 10)
      ->execute();
    foreach ($result as $node) {
      $matches[$node->title] = check_plain($node->title);
    }
  }

  drupal_json_output($matches);
}